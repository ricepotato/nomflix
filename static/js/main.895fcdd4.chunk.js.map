{"version":3,"sources":["assets/noPoster.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Videos.js","Components/Companies.js","Components/Countries.js","Components/Seasons.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","original_title","poster_path","key","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","moviesApi","HomeContainer","state","data","results","this","setState","React","Component","h3","VideoList","ul","VideoItem","li","ThumbnameImg","img","Videos","videos","item","href","target","rel","src","CompanyList","CompanyItem","CompanyImage","Companies","companies","filter","company","logo_path","CountryList","CountryItem","Countries","countries","country","name","SeasonTitle","h4","SeasonList","ol","SeasonItem","Seasons","seasons","season","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","original_name","backdrop_path","first_air_date","runtime","episode_run_time","genres","genre","index","legnth","overview","site","production_companies","production_countries","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","console","log","TvPresenter","topRated","airingToday","show","TvContainer","Form","form","Input","input","SaerchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","onChange","placeholder","value","SearchContainer","event","preventDefault","searchByTerm","a","SearchPresenter","Header","header","List","current","SLink","Link","withRouter","path","exact","component","Home","Detail","Search","Tv","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.895fcdd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.cd4cbcca.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-bottom: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 10vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ❤️ Loading\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPoster.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <Container>\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                id={movie.id}\n                key={movie.id}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                id={movie.id}\n                key={movie.id}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                id={movie.id}\n                key={movie.id}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"7539a2083cc4f7d9dc5e72dc2d0091e4\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n`;\nconst Title = styled.h3`\n  font-size: 18px;\n`;\nconst VideoList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n`;\nconst VideoItem = styled.li`\n  width: 250px;\n  margin-right: 5px;\n`;\n\nconst ThumbnameImg = styled.img`\n  width: 100%;\n`;\n\nconst Videos = ({ videos }) => (\n  <Container>\n    <Title>Youtube Links</Title>\n    <VideoList>\n      {videos.map((item) => (\n        <VideoItem>\n          <a\n            href={`https://www.youtube.com/watch?v=${item.key}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <ThumbnameImg\n              src={`https://img.youtube.com/vi/${item.key}/hqdefault.jpg`}\n            ></ThumbnameImg>\n          </a>\n        </VideoItem>\n      ))}\n    </VideoList>\n  </Container>\n);\n\nexport default Videos;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n`;\n\nconst CompanyList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst CompanyItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  background-color: rgba(255, 255, 255, 0.8);\n  height: 60px;\n  padding: 4px 10px;\n  border-radius: 5px;\n`;\n\nconst CompanyImage = styled.img`\n  max-width: 180px;\n  max-height: 45px;\n`;\n\nconst Companies = ({ companies }) => (\n  <Container>\n    <CompanyList>\n      {companies\n        .filter((company) => company.logo_path !== null)\n        .map((company) => (\n          <CompanyItem>\n            <CompanyImage\n              src={`https://image.tmdb.org/t/p/original/${company.logo_path}`}\n            ></CompanyImage>\n          </CompanyItem>\n        ))}\n    </CompanyList>\n  </Container>\n);\n\nexport default Companies;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n`;\n\nconst CountryList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst CountryItem = styled.li`\n  padding: 4px 10px;\n  border: 2px solid #fafafa;\n  border-radius: 4px;\n  margin-right: 5px;\n`;\n\nconst Countries = ({ countries }) => (\n  <Container>\n    <CountryList>\n      {countries.map((country) => (\n        <CountryItem>{country.name}</CountryItem>\n      ))}\n    </CountryList>\n  </Container>\n);\n\nexport default Countries;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 18px;\n`;\n\nconst SeasonTitle = styled.h4`\n  margin: 4px 0px;\n  font-size: 14px;\n`;\n\nconst Poster = styled.img`\n  width: 150px;\n`;\n\nconst SeasonList = styled.ol`\n  display: flex;\n`;\n\nconst SeasonItem = styled.li`\n  margin-right: 5px;\n`;\n\nconst Seasons = ({ seasons }) => (\n  <Container>\n    <Title>Seasons</Title>\n    <SeasonList>\n      {seasons.map((season) => (\n        <SeasonItem>\n          <SeasonTitle>{season.name}</SeasonTitle>\n          <Poster\n            src={`https://image.tmdb.org/t/p/original${season.poster_path}`}\n          ></Poster>\n        </SeasonItem>\n      ))}\n    </SeasonList>\n  </Container>\n);\n\nexport default Seasons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Videos from \"Components/Videos\";\nimport Companies from \"Components/Companies\";\nimport Countries from \"Components/Countries\";\nimport Seasons from \"Components/Seasons\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Loader />\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPoster.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>.</Divider>\n            <Item>\n              {result.runtime === 0 || result.runtime\n                ? result.runtime\n                : result.episode_run_time[0]}{\" \"}\n              min\n            </Item>\n            <Divider>.</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.legnth - 1\n                    ? genre.name\n                    : ` ${genre.name} /`\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <Videos\n            videos={result.videos.results.filter(\n              (item) => item.site === \"YouTube\"\n            )}\n          ></Videos>\n          {result.production_companies ? (\n            <Companies companies={result.production_companies}></Companies>\n          ) : (\n            \"\"\n          )}\n          {result.production_countries ? (\n            <Countries countries={result.production_countries}></Countries>\n          ) : (\n            \"\"\n          )}\n          {result.seasons ? <Seasons seasons={result.seasons}></Seasons> : \"\"}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TvPresenter = ({ topRated, airingToday, popular, error, loading }) =>\n  loading ? (\n    <Loader></Loader>\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              key={show.id}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              key={show.id}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today Shows\">\n          {airingToday.map((show) => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              id={show.id}\n              key={show.id}\n              isMovie={false}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            ></Poster>\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nTvPresenter.propTypes = {\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TvPresenter;\n","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;\n","import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      this.setState({ topRated, airingToday, popular });\n    } catch {\n      this.setState({ error: \"Can't find tv information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TvPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-top: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SaerchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        onChange={updateTerm}\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                id={movie.id}\n                key={movie.id}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Tv Shows Results\">\n            {tvResults.map((show) => (\n              <Poster\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                id={show.id}\n                key={show.id}\n                isMovie={false}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message\n              text={`Nothing Found for '${searchTerm}'`}\n              color=\"#95a5a6\"\n            ></Message>\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSaerchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SaerchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    console.log(value);\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        searchTerm={searchTerm}\n        tvResults={tvResults}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 4px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HeaderComponent = ({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n);\n\nexport default withRouter(HeaderComponent);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Detail from \"Routes/Detail\";\nimport Tv from \"Routes/Tv\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header></Header>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/detail\" exact component={Detail} />\n      <Route path=\"/search\" exact component={Search} />\n      <Route path=\"/tv\" exact component={Tv} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router></Router>\n      <GlobalStyles></GlobalStyles>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}