{"version":3,"sources":["assets/noPoster.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","original_title","poster_path","key","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","moviesApi","HomeContainer","state","data","results","this","setState","React","Component","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","original_name","backdrop_path","first_air_date","runtime","episode_run_time","genres","genre","index","legnth","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","console","log","TvPresenter","topRated","airingToday","show","TvContainer","Form","form","Input","input","SaerchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","onChange","placeholder","value","SearchContainer","event","preventDefault","searchByTerm","target","a","SearchPresenter","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","Detail","Search","Tv","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.312bce51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.cd4cbcca.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-bottom: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 10vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ❤️ Loading\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader></Loader>\r\n    ) : (\r\n      <Container>\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                id={movie.id}\r\n                key={movie.id}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                id={movie.id}\r\n                key={movie.id}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                id={movie.id}\r\n                key={movie.id}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"7539a2083cc4f7d9dc5e72dc2d0091e4\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch {\r\n      this.setState({ error: \"Can't find movies information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Loader />\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>.</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>.</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.legnth - 1\r\n                    ? genre.name\r\n                    : ` ${genre.name} /`\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movies/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n      console.log(result);\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TvPresenter = ({ topRated, airingToday, popular, error, loading }) =>\r\n  loading ? (\r\n    <Loader></Loader>\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              id={show.id}\r\n              key={show.id}\r\n              isMovie={false}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              id={show.id}\r\n              key={show.id}\r\n              isMovie={false}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today Shows\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              id={show.id}\r\n              key={show.id}\r\n              isMovie={false}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            ></Poster>\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>\r\n  );\r\n\r\nTvPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TvPresenter;\r\n","import TvContainer from \"./TvContainer\";\r\n\r\nexport default TvContainer;\r\n","import React from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      console.log(topRated, airingToday, popular);\r\n      this.setState({ topRated, airingToday, popular });\r\n    } catch {\r\n      this.setState({ error: \"Can't find tv information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TvPresenter\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-top: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SaerchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  error,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        onChange={updateTerm}\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                id={movie.id}\r\n                key={movie.id}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"Tv Shows Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                id={show.id}\r\n                key={show.id}\r\n                isMovie={false}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message\r\n              text={`Nothing Found for '${searchTerm}'`}\r\n              color=\"#95a5a6\"\r\n            ></Message>\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSaerchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SaerchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        searchTerm={searchTerm}\r\n        tvResults={tvResults}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 4px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderComponent = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(HeaderComponent);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Tv from \"Routes/Tv\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header></Header>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/detail\" exact component={Detail} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/tv\" exact component={Tv} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router></Router>\r\n      <GlobalStyles></GlobalStyles>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}